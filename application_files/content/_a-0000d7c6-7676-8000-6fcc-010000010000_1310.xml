<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>getRecordsFromRecordType</name>
        <uuid>_a-0000d7c6-7676-8000-6fcc-010000010000_1310</uuid>
        <description>Retrieves the Records for a specific Record Type. The 'recordField' input is used for aggregating the results</description>
        <parentUuid>_a-0000d7fd-38c3-8000-2bf7-010000010000_1323</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>=queryrecord(ri!recordType,
 'type!{http://www.appian.com/ae/types/2009}Query'(
  'selection|aggregation':'type!{http://www.appian.com/ae/types/2009}Selection'(
   columns:{
    'type!{http://www.appian.com/ae/types/2009}AggregationColumn'(
      field:ri!recordField,
      visible: true(),
      isgrouping:true()
    )
   }
  ),
  pagingInfo:('type!{http://www.appian.com/ae/types/2009}PagingInfo'(1,-1))
 )
)</definition>
        <namedTypedValue>
            <name>recordType</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>recordField</name>
            <type>
                <name>string</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
            <value/>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
