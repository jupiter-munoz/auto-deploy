<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>peoplePickerField_example</name>
        <uuid>_a-0000d711-d7b0-8000-d332-010000010000_1224</uuid>
        <description></description>
        <parentUuid>_a-0000d710-87e4-8000-837a-010000010000_1404</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>=load(
readonly: and(not(#&quot;_a-0000d6f5-c20a-8000-bd70-010000010000_1375&quot;), rf!readonly),
disabled: rf!disabled,
defaultvalue: if(rf!defaultvalue=true, touser(&quot;donald.aaron&quot;), null()),

'type!{http://www.appian.com/ae/types/2009}PeopleSuggestField'(
  label: &quot;Assignee&quot;,
  instructions: &quot;Please pick a user to reassign the new task&quot;,
  required: true,
  readOnly: local!readonly,
  disabled: local!disabled,
  suggestUrl: &quot;https://server/api/users/a&quot;,
  valueType: &quot;USER&quot;,
  multiple: true,
  value: local!defaultvalue,
  saveInto: defaultvalue,
  valueDetails: {displayName: &quot;Donald Aaron&quot;,
          avatarUrl: &quot;https://server/api/users/donaldaaron&quot;,
	  description: &quot;donald.aaron&quot;}
)

)</definition>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
